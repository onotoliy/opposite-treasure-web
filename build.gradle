buildscript {
    ext {
        kotlin_version = '1.3.50'
        kotlin_for_react_version = 'pre.83-kotlin-1.3.50'
    }
    repositories {
        jcenter()
    }
}

plugins {
    id 'kotlin2js' version '1.3.50'
    id 'kotlinx-serialization' version '1.3.50'
    id 'org.jetbrains.kotlin.frontend' version '0.0.45'
}
if (project.hasProperty('prod')) {
    apply plugin: 'kotlin-dce-js'
}

version '0.0.1'

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url "https://dl.bintray.com/kotlin/kotlin-js-wrappers"
    }
    maven {
        url "https://dl.bintray.com/kotlinx/kotlinx"
    }
    maven {
        url  "https://dl.bintray.com/a-k-pohresniy/onotoliy"
    }
}

configurations {
    ktlint
}

compileKotlin2Js {
    kotlinOptions {
        moduleKind = "commonjs"
        sourceMap = true
        sourceMapEmbedSources = "always"
        metaInfo = true
        main = "call"
    }
}

dependencies {
    implementation "com.github.onotoliy.opposite:treasure-data-js:1.0.3"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    implementation "org.jetbrains:kotlin-react:16.6.0-$kotlin_for_react_version"
    implementation "org.jetbrains:kotlin-react-dom:16.6.0-$kotlin_for_react_version"
    implementation "org.jetbrains:kotlin-react-redux:5.0.7-$kotlin_for_react_version"
    implementation "org.jetbrains:kotlin-redux:4.0.0-$kotlin_for_react_version"
    implementation "org.jetbrains:kotlin-react-router-dom:4.3.1-$kotlin_for_react_version"
    implementation "org.jetbrains:kotlin-styled:1.0.0-$kotlin_for_react_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.12.0"

    ktlint "com.pinterest:ktlint:0.33.0"
}

kotlinFrontend {
    npm {
        dependency("core-js")
        dependency("react")
        dependency("react-dom")
        dependency("react-router-dom")
        dependency("react-redux")
        dependency("redux")
        dependency("inline-style-prefixer")
        dependency("styled-components")
        dependency("@material-ui/core")
        dependency("react-google-maps")
    }

    sourceMaps = false

    webpackBundle {
        port = 8080
        bundleName = "main"
        contentPath = file("$projectDir/static")
        sourceMapEnabled = true
        if (project.hasProperty('prod')) {
            mode = "production"
        }
    }
}

task serverPrepare(type: Copy, dependsOn: ['bundle']) {
    doFirst { delete "$projectDir/static" }
    from "$projectDir/build/bundle", "$projectDir/src/main/web"
    into "$projectDir/static"
}

build.dependsOn serverPrepare

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}